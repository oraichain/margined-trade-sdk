name: publish_package

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains 1 jobs called"build"
  build:
    runs-on: orai-swarm
    strategy:
      matrix:
        node-version: [">=16.0.0"]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Build
        run: yarn build packages/contracts-sdk && yarn build packages/common && yarn --cwd packages/vamm_price build
      - name: Authenticate with private NPM package
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          git config --global user.email "mainnet@orai.io"
          git config --global user.name "oraichain_official"
      - name: Publish
        id: publish
        continue-on-error: true
        run: yarn deploy packages/vamm_price
        env:
          CI: false
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install latest version
        id: install
        if: steps.publish.outcome != 'failure' 
        continue-on-error: true
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOCKER_SWARM_MANAGER_ONE }}
          username: root
          key: ${{ secrets.DOCKER_SWARM_MANAGER_ONE_KEY }}
          script: docker exec ${{ secrets.DOCKER_SWARM_MANAGER_ONE_NODE_18_ID}} sh -c 'yarn global add @oraichain/oraidex-future-vamm-price@latest --ignore-scripts'

      - name: send result via discord
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          username: "GitBot"
          message: "Deployed ${{ github.event.repository.name }}. result: ${{ steps.publish.outcome }}"
          # message: "Deployed ${{ github.event.repository.name }}. result: ${{ steps.publish.outcome }}. install result: ${{ steps.install.outcome }}"